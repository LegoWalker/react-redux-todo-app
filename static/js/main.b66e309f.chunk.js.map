{"version":3,"sources":["redux/todoSlice.js","components/AddTodoForm.js","components/TodoItem.js","components/TodoList.js","components/TotalCompleteItems.js","App.js","redux/store.js","index.js"],"names":["todoSlice","createSlice","name","initialState","id","title","completed","reducers","addTodo","state","action","newTodo","Date","now","payload","push","toggleComplete","index","findIndex","todo","deleteTodo","filter","actions","AddTodoForm","useState","value","setValue","dispatch","useDispatch","onSubmit","event","preventDefault","className","type","placeholder","onChange","target","TodoItem","checked","onClick","TodoList","todos","useSelector","map","TotalCompleteItems","completedTodos","length","App","configureStore","reducer","todoReducer","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"+MAEMA,EAAYC,YAAY,CAC1BC,KAAM,QACNC,aAAc,CACV,CAACC,GAAI,EAAGC,MAAO,QAASC,WAAW,GACnC,CAACF,GAAI,EAAGC,MAAO,QAASC,WAAW,GACnC,CAACF,GAAI,EAAGC,MAAO,QAASC,WAAW,GACnC,CAACF,GAAI,EAAGC,MAAO,QAASC,WAAW,IAEvCC,SAAU,CACNC,QAAS,SAACC,EAAOC,GACb,IAAMC,EAAU,CACZP,GAAIQ,KAAKC,MACTR,MAAOK,EAAOI,QAAQT,MACtBC,WAAW,GAEfG,EAAMM,KAAKJ,IAEfK,eAAgB,SAACP,EAAOC,GACpB,IAAMO,EAAQR,EAAMS,WAChB,SAACC,GAAD,OAAUA,EAAKf,KAAOM,EAAOI,QAAQV,MAEzCK,EAAMQ,GAAOX,UAAYI,EAAOI,QAAQR,WAE5Cc,WAAY,SAACX,EAAOC,GAChB,OAAOD,EAAMY,QAAO,SAACF,GAAD,OAAUA,EAAKf,IAAMM,EAAOI,QAAQV,U,EAKZJ,EAAUsB,QAAnDd,E,EAAAA,QAASQ,E,EAAAA,eAAgBI,E,EAAAA,WAEzBpB,IAAf,Q,OCIeuB,EAjCK,WAAO,IAAD,EACCC,mBAAS,IADV,mBAClBC,EADkB,KACXC,EADW,KAGnBC,EAAWC,cAYjB,OACC,uBAAMC,SAXU,SAACC,GACjBA,EAAMC,iBACNJ,EACCnB,EAAQ,CACPH,MAAOoB,MAOiBO,UAAU,wBAApC,UACC,uBAAOA,UAAU,UAAjB,kBACA,uBACCC,KAAK,OACLD,UAAU,4BACVE,YAAY,cACZT,MAAOA,EACPU,SAAU,SAACL,GAAD,OAAWJ,EAASI,EAAMM,OAAOX,UAG5C,wBAAQQ,KAAK,SAASD,UAAU,uBAAhC,wBCKYK,EA/BE,SAAC,GAA8B,IAA5BjC,EAA2B,EAA3BA,GAAIC,EAAuB,EAAvBA,MAAOC,EAAgB,EAAhBA,UACxBqB,EAAWC,cAYjB,OACC,oBAAII,UAAS,0BAAqB1B,GAAa,2BAA/C,SACC,sBAAK0B,UAAU,iCAAf,UACC,uBAAMA,UAAU,4BAAhB,UACC,uBACCC,KAAK,WACLD,UAAU,OACVM,QAAShC,EACT6B,SAlBsB,WAC1BR,EACCX,EAAe,CAAEZ,GAAIA,EAAIE,WAAYA,QAkBlCD,KAEF,wBAAQ2B,UAAU,iBAAiBO,QAhBb,WACxBZ,EAAUP,EAAW,CAAEhB,GAAIA,MAezB,0BCLWoC,EApBE,WAChB,IAAMC,EAAQC,aAAY,SAACjC,GAAD,OAAWA,EAAMgC,SAU3C,OACC,oBAAIT,UAAU,aAAd,SACES,EAAME,KAAI,SAACxB,GAAD,OACV,cAAC,EAAD,CAAwBf,GAAIe,EAAKf,GAAIC,MAAOc,EAAKd,MAAOC,UAAWa,EAAKb,WAAzDa,EAAKf,UCPTwC,EARY,WAC1B,IAAMC,EAAiBH,aAAY,SAACjC,GAAD,OAClCA,EAAMgC,MAAMpB,QAAO,SAACF,GAAD,OAA6B,IAAnBA,EAAKb,gBAGnC,OAAO,qBAAI0B,UAAU,OAAd,oCAA8Ca,EAAeC,OAA7D,QCSOC,EAXH,WACX,OACC,sBAAKf,UAAU,8BAAf,UACC,8CACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,QCTYgB,cAAe,CAC1BC,QAAS,CACLR,MAAOS,KCEfC,IAASC,OACR,cAAC,IAAMC,WAAP,UACC,cAAC,IAAD,CAAUC,MAAOA,EAAjB,SACC,cAAC,EAAD,QAGFC,SAASC,eAAe,W","file":"static/js/main.b66e309f.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst todoSlice = createSlice({\r\n    name: \"todos\",\r\n    initialState: [\r\n        {id: 1, title: \"todo1\", completed: false },\r\n        {id: 2, title: \"todo2\", completed: true },\r\n        {id: 3, title: \"todo3\", completed: false },\r\n        {id: 4, title: \"todo4\", completed: true },\r\n    ],\r\n    reducers: {\r\n        addTodo: (state, action) => {\r\n            const newTodo = {\r\n                id: Date.now(),\r\n                title: action.payload.title,\r\n                completed: false\r\n            };\r\n            state.push(newTodo);\r\n        },\r\n        toggleComplete: (state, action) => {\r\n            const index = state.findIndex(\r\n                (todo) => todo.id === action.payload.id\r\n            );\r\n            state[index].completed = action.payload.completed;\r\n        },\r\n        deleteTodo: (state, action) => {\r\n            return state.filter((todo) => todo.id != action.payload.id);\r\n        }\r\n    }\r\n})\r\n\r\nexport const { addTodo, toggleComplete, deleteTodo, } = todoSlice.actions;\r\n\r\nexport default todoSlice.reducer;","import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { addTodo } from '../redux/todoSlice'\r\n\r\nconst AddTodoForm = () => {\r\n\tconst [value, setValue] = useState('');\r\n\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst onSubmit = (event) => {\r\n\t\tevent.preventDefault();\r\n\t\tdispatch(\r\n\t\t\taddTodo({\r\n\t\t\t\ttitle: value,\r\n\t\t\t})\r\n\t\t);\r\n\t\t// console.log('user entered: ' + value);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<form onSubmit={onSubmit} className='form-inline mt-3 mb-3'>\r\n\t\t\t<label className='sr-only'>Name</label>\r\n\t\t\t<input\r\n\t\t\t\ttype='text'\r\n\t\t\t\tclassName='form-control mb-2 mr-sm-2'\r\n\t\t\t\tplaceholder='Add todo...'\r\n\t\t\t\tvalue={value}\r\n\t\t\t\tonChange={(event) => setValue(event.target.value)}\r\n\t\t\t></input>\r\n\r\n\t\t\t<button type='submit' className='btn btn-primary mb-2'>\r\n\t\t\t\tSubmit\r\n\t\t\t</button>\r\n\t\t</form>\r\n\t);\r\n};\r\n\r\nexport default AddTodoForm;\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { toggleComplete, deleteTodo } from '../redux/todoSlice';\r\n\r\nconst TodoItem = ({ id, title, completed }) => {\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst handleComleteClick = () => {\r\n\t\tdispatch(\r\n\t\t\ttoggleComplete({ id: id, completed: !completed })\r\n\t\t);\r\n\t};\r\n\r\n\tconst handleDeleteTodo = () => {\r\n\t\tdispatch( deleteTodo({ id: id }) );\r\n\t};\r\n\r\n\treturn (\r\n\t\t<li className={`list-group-item ${completed && 'list-group-item-success'}`}>\r\n\t\t\t<div className='d-flex justify-content-between'>\r\n\t\t\t\t<span className='d-flex align-items-center'>\r\n\t\t\t\t\t<input \r\n\t\t\t\t\t\ttype='checkbox' \r\n\t\t\t\t\t\tclassName='mr-3' \r\n\t\t\t\t\t\tchecked={completed}\r\n\t\t\t\t\t\tonChange={handleComleteClick}\r\n\t\t\t\t\t\t></input>\r\n\t\t\t\t\t{title}\r\n\t\t\t\t</span>\r\n\t\t\t\t<button className='btn btn-danger' onClick={handleDeleteTodo}>Delete</button>\r\n\t\t\t</div>\r\n\t\t</li>\r\n\t);\r\n};\r\n\r\nexport default TodoItem;\r\n\r\n{/* <li className={`list-group-item ${completed && 'list-group-item-success'}`}>\r\n<div className='d-flex justify-content-between'>\r\n\t<span className='d-flex align-items-center'>\r\n\t\t<input type='checkbox' className='mr-3' checked={completed}></input>\r\n\t\t{title}\r\n\t</span>\r\n\t<button className='btn btn-danger'>Delete</button>\r\n</div>\r\n</li> */}\r\n","import React from 'react';\r\nimport TodoItem from './TodoItem';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst TodoList = () => {\r\n\tconst todos = useSelector((state) => state.todos);\r\n\r\n\t// const todos = [\r\n\t// \t{ id: 1, title: 'todo1', completed: false },\r\n\t// \t{ id: 2, title: 'todo2', completed: false },\r\n\t// \t{ id: 3, title: 'todo3', completed: true },\r\n\t// \t{ id: 4, title: 'todo4', completed: false },\r\n\t// \t{ id: 5, title: 'todo5', completed: false },\r\n\t// ];\r\n\r\n\treturn (\r\n\t\t<ul className='list-group'>\r\n\t\t\t{todos.map((todo) => (\r\n\t\t\t\t<TodoItem key={todo.id} id={todo.id} title={todo.title} completed={todo.completed} />\r\n\t\t\t))}\r\n\t\t</ul>\r\n\t);\r\n};\r\n\r\nexport default TodoList;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst TotalCompleteItems = () => {\r\n\tconst completedTodos = useSelector((state) => \r\n\t\tstate.todos.filter((todo) => todo.completed === true)\r\n\t);\r\n\r\n\treturn <h4 className='mt-3'> Total Complete Items: { completedTodos.length } </h4>;\r\n};\r\n\r\nexport default TotalCompleteItems;\r\n","import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport AddTodoForm from './components/AddTodoForm';\r\nimport TodoList from './components/TodoList';\r\nimport TotalCompleteItems from './components/TotalCompleteItems';\r\n\r\nconst App = () => {\r\n\treturn (\r\n\t\t<div className='container bg-white p-4 mt-5'>\r\n\t\t\t<h1>My Todo List</h1>\r\n\t\t\t<AddTodoForm />\r\n\t\t\t<TodoList />\r\n\t\t\t<TotalCompleteItems />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default App;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport todoReducer from './todoSlice'\r\n\r\nexport default configureStore({\r\n    reducer: {\r\n        todos: todoReducer,\r\n    }\r\n});","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './redux/store'\r\nimport { Provider } from 'react-redux';\r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\t\t<Provider store={store}>\r\n\t\t\t<App />\r\n\t\t</Provider>\r\n\t</React.StrictMode>,\r\n\tdocument.getElementById('root')\r\n);\r\n"],"sourceRoot":""}